==================
Macro definitions
==================

GLOBAL &Macroname

LOCAL &GLOBAL

PRIVATE &msg1 &(started) &line_counT

---

(script
  (macro_declaration
    (identifier))
  (macro_declaration
    (identifier))
  (macro_declaration
    (identifier)
    (identifier)
    (identifier)))

==================
Recursive macro expansion
==================

&&cmd

---

(script
  (recursive_macro_expansion
    (identifier)))

==================
Assignment expression
==================

&a = 1
&b=&(macro)

---

(script
  (assignment_expression
    (identifier)
    (literal))
  (assignment_expression
    (identifier)
    (identifier)))

==================
Binary operators
==================

&a=1&&2
&a = 1^^&b
&a= &b||2
&a= 1+2
&a= 1-&b
&a= &b*2
&a= 1/2
&a= 1%&b
&a= &b|2
&a= 1^2
&a= 1&&b
&a= &b==2
&a= 1!=2
&a= 1>&b
&a= &b>=2
&a= 1<=2
&a= 2<1
&a= 1<<&b
&a= &b>>2

---

(script
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (literal)))
  (assignment_expression
    (identifier)
    (binary_expression
      (literal)
      (identifier)))
  (assignment_expression
    (identifier)
    (binary_expression
      (identifier)
      (literal))))
